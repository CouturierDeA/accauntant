@mixin grid-padding() {
  padding-left: $gutter-width;
  padding-right: $gutter-width;

}

@mixin grid-width($width : $grid-width) {
  max-width: $width;
  margin-left: auto;
  margin-right: auto;

}

@mixin linear-gradient($direction, $gradients...) {
  background-color: nth($gradients, 1);
  background-image: linear-gradient($direction, $gradients...);
}

@mixin position($params...) {
  top: nth($params, 1);
  right: nth($params, 2);
  bottom: nth($params, 3);
  left: nth($params, 4);
}

@mixin scrollbar($width) {

  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 #{$width} rgba($secondary, .3);
    border-radius: $br;
    background-color: $complementary-light;
  }

  &::-webkit-scrollbar {
    width: #{$width};
    background-color: $complementary-light;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: $br;
    -webkit-box-shadow: inset 0 0 #{$width} rgba(0, 0, 0, .3);
    background-color: #555;
  }

}

@mixin calc-minus($width, $operand) {
  width: calc(#{$width} - #{$operand});
  width: -webkit-calc(#{$width} - #{$operand});
}

@mixin calc-plus($width, $operand) {
  width: calc(#{$width} + #{$operand});
  width: -webkit-calc(#{$width} + #{$operand});
}

@mixin make-grid($cols: 24) {
  @each $p in $bp {
    $key: nth($p, 1);
    $value: nth($p, 2);

    @include media($value) {

      .c#{$key} {
        margin-left: $gw/2;
        margin-right: $gw/2;
      }

      .row-#{$key} {
        @include calc-plus(100%, $gw*2);
        margin-left: -$gw;
        margin-right: -$gw;
      }

      .row-#{$key}-half {
        @include calc-plus(100%, $gw);
        margin-left: -$gw/2;
        margin-right: -$gw/2;
      }
    }

    @for $i from 0 through $cols {
      @if ($i == 0) {


      } @else {
        @include media($value) {
          //.flex-basis-xs-1 flex-basis: 1024/$i/$cols;
          .flex-basis-c#{$key}-#{$i} {
            flex-basis: $grid-width-minus-gw/$cols*$i;
          }
          .flex-basis-#{$key}-#{$i} {
            flex-basis: $grid-width-base/$cols*$i;
          }
          .#{$key}-#{$i} {
            width: percentage($i/$cols)
          }
          .c#{$key}-#{$i} {
            @include calc-minus(percentage($i/$cols), $gw);
            margin-left: $gw/2;
            margin-right: $gw/2;
          }
          //.ofs-#{$key}-#{$i}{
          //  margin-left: percentage($i/$cols);
          //}
        }
      }


    }
  }
}